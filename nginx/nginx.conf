# SoulSync Backend Nginx Configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for performance
worker_rlimit_nofile 65535;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; frame-ancestors 'none';" always;

    # Upstream backend servers
    upstream soulsync_backend {
        least_conn;
        server soulsync-backend:5001 max_fails=3 fail_timeout=30s;
        # Add more backend servers for load balancing:
        # server soulsync-backend-2:5001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name api.soulsync.solutions *.soulsync.solutions;
        return 301 https://$host$request_uri;
    }

    # Main API server configuration
    server {
        listen 443 ssl http2;
        server_name api.soulsync.solutions;

        # SSL certificates (update paths to your actual certificates)
        ssl_certificate /etc/nginx/ssl/soulsync.solutions.crt;
        ssl_private_key /etc/nginx/ssl/soulsync.solutions.key;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://soulsync.solutions" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-api-key, Cache-Control" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests
        location ~ ^/api/.*$ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "https://soulsync.solutions";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, x-api-key, Cache-Control";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;
            limit_conn perip 20;

            # Proxy to backend
            proxy_pass http://soulsync_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Authentication endpoints with stricter rate limiting
        location ~ ^/api/auth/(login|register|forgot-password)$ {
            limit_req zone=login burst=5 nodelay;
            limit_conn perip 5;

            proxy_pass http://soulsync_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint (no rate limiting)
        location = /health {
            access_log off;
            proxy_pass http://soulsync_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Root endpoint
        location = / {
            proxy_pass http://soulsync_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block access to sensitive files
        location ~ /\.(env|git|htaccess|htpasswd) {
            deny all;
            return 404;
        }

        # Custom error pages
        error_page 404 /404.json;
        error_page 500 502 503 504 /50x.json;

        location = /404.json {
            internal;
            return 404 '{"success": false, "message": "API endpoint not found", "status": 404}';
            add_header Content-Type application/json always;
        }

        location = /50x.json {
            internal;
            return 500 '{"success": false, "message": "Internal server error", "status": 500}';
            add_header Content-Type application/json always;
        }
    }

    # Alternative server block for www subdomain
    server {
        listen 443 ssl http2;
        server_name www.api.soulsync.solutions;

        ssl_certificate /etc/nginx/ssl/soulsync.solutions.crt;
        ssl_private_key /etc/nginx/ssl/soulsync.solutions.key;

        return 301 https://api.soulsync.solutions$request_uri;
    }
}